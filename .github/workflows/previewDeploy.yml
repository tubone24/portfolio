name: DeployToNetlifyPreview
on:
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v5
      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            .cache
          key: ${{ runner.OS }}-build-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-
            ${{ runner.OS }}
      - name: Setup Node
        uses: actions/setup-node@v5
        with:
          node-version: 22.x
      - name: install dependencies
        run: yarn install
      - name: unit test
        run: yarn test
#      - name: Cypress UI test
#        run: |
#          npx cypress install
#          yarn test:e2e:ci
#      - uses: actions/upload-artifact@v4
#        with:
#          name: cypress-video
#          path: ./cypress/videos/e2e/*.mp4
  storybook:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v5
      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            .cache
          key: ${{ runner.OS }}-build-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-
            ${{ runner.OS }}
      - name: Setup Node
        uses: actions/setup-node@v5
        with:
          node-version: 22.x
      - name: install dependencies
        run: yarn install
      - name: build storybook
        run: yarn build-storybook
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v5
      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            .cache
          key: ${{ runner.OS }}-build-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-
            ${{ runner.OS }}
      - name: Setup Node
        uses: actions/setup-node@v5
        with:
          node-version: 22.x
      - name: "depcheck"
        uses: tubone24/depcheck_action@v1.2.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_COMMENT_URL: ${{ github.event.pull_request.comments_url }}
      - name: install dependencies
        env:
          GATSBY_GITHUB_SHA: ${{ github.sha }}
          NETLIFY_ENV: deploy-preview
        run: yarn install
      - name: build
        env:
          GATSBY_GITHUB_SHA: ${{ github.sha }}
          NETLIFY_ENV: deploy-preview
        run: yarn build
      - name: Deploy to netlify
        run: |
          set -o pipefail
          npx netlify-cli deploy --dir=./public > cli.txt 2>&1
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NO_COLOR: "1"
      - name: Prepare Netlify CLI comment body
        run: |
          # ANSIエスケープコード/CRを除去してクリーンなログにする
          sed -E 's/\x1B\[[0-9;]*[A-Za-z]//g' cli.txt | sed 's/\r//g' > cli.clean.txt
          # JSONに安全にエンコード（改行や引用符も含めてエスケープ）
          jq -Rs '{body: .}' < cli.clean.txt > body.json
          # 可能ならプレビューURLを抽出して本文末尾に追記
          PREVIEW_URL=$(grep -Eo 'https://[a-zA-Z0-9-]+--[a-zA-Z0-9-]+\.netlify\.app[^[:space:]]*' cli.clean.txt | tail -n1 || true)
          if [ -n "$PREVIEW_URL" ]; then
            printf "\n\nPreview: %s\n" "$PREVIEW_URL" >> cli.clean.txt
            jq -Rs '{body: .}' < cli.clean.txt > body.json
          fi
      - name: Post Netlify CLI Comment
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          URL: ${{ github.event.pull_request.comments_url }}
        run: |
          curl -X POST \
               -H "Authorization: token ${GITHUB_TOKEN}" \
               -H "Content-Type: application/json" \
               --data @body.json \
               "${URL}"
  chromatic-deployment:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            .cache
          key: ${{ runner.OS }}-build-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-
            ${{ runner.OS }}
      - name: Setup Node
        uses: actions/setup-node@v5
        with:
          node-version: 22.x
      - name: Install
        run: yarn install
      - name: run Chromatic
        uses: chromaui/action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
