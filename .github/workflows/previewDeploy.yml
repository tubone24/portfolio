name: DeployToNetlifyPreview
on:
  pull_request:
    branches:
      - master

jobs:
  uiCheck:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            .cache
          key: ${{ runner.OS }}-build-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-
            ${{ runner.OS }}
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - name: Install Dependencies
        run: yarn install
      - name: build
        env:
          GATSBY_GITHUB_SHA: ${{ github.sha }}
          NETLIFY_ENV: deploy-preview
        run: yarn build
      - name: Percy test
        env:
          PERCY_TOKEN: ${{secrets.PERCY_TOKEN}}
        run: yarn run percy snapshot ./public/
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            .cache
          key: ${{ runner.OS }}-build-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-
            ${{ runner.OS }}
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - name: install dependencies
        run: yarn install
      - name: unit test
        run: yarn test
      - name: Cypress UI test
        run: |
          yarn run cypress install
          yarn test:e2e:ci
      - uses: actions/upload-artifact@v2
        with:
          name: cypress-video
          path: ./cypress/videos/e2e/*.mp4
  storybook:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            .cache
          key: ${{ runner.OS }}-build-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-
            ${{ runner.OS }}
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - name: install dependencies
        run: yarn install
      - name: build storybook
        run: yarn build-storybook
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            .cache
          key: ${{ runner.OS }}-build-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-
            ${{ runner.OS }}
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - name: "depcheck"
        uses: tubone24/depcheck_action@v1.1.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_COMMENT_URL: ${{ github.event.pull_request.comments_url }}
      - name: install dependencies
        env:
          GATSBY_GITHUB_SHA: ${{ github.sha }}
          NETLIFY_ENV: deploy-preview
        run: yarn install
      - name: build
        env:
          GATSBY_GITHUB_SHA: ${{ github.sha }}
          NETLIFY_ENV: deploy-preview
        run: yarn build
      - name: Deploy to netlify
        run: yarn run netlify-cli deploy --dir=./public > cli.txt
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      - name: Cat cli.txt
        run: |
          cat cli.txt
          sed -i -z 's/\n/\\n/g' cli.txt
          sed -i -r "s/\x1B\[([0-9]{1,2}(;[0-9]{1,2})*)?m//g" cli.txt
      - name: Post Netlify CLI Comment
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          URL: ${{ github.event.pull_request.comments_url }}
        run: |
          curl -X POST \
               -H "Authorization: token ${GITHUB_TOKEN}" \
               -d "{\"body\": \"$(cat cli.txt)\"}" \
               ${URL}
  chromatic-deployment:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - name: Install
        run: yarn install
      - name: run Chromatic
        uses: chromaui/action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
