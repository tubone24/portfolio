name: DeployToNetlifyPRD
on:
  push:
    branches:
      - master
jobs:
  uiCheck:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v5
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-
            ${{ runner.OS }}
      - name: Setup Node
        uses: actions/setup-node@v5
        with:
          node-version: 18.x
      - name: install dependencies
        run: yarn install
      - name: build
        env:
          GATSBY_GITHUB_SHA: ${{ github.sha }}
          NETLIFY_ENV: production
        run: yarn build
      - name: Percy test
        env:
          PERCY_TOKEN: ${{secrets.PERCY_TOKEN}}
        run: npx percy snapshot ./public/
  storybook:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v5
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-
            ${{ runner.OS }}
      - name: Setup Node
        uses: actions/setup-node@v5
        with:
          node-version: 18.x
      - name: Install dependencies
        run: yarn install
      - name: build storybook
        run: yarn build-storybook
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./sb
          keep_files: true
          destination_dir: sb
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v5
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-
            ${{ runner.OS }}
      - name: Setup Node
        uses: actions/setup-node@v5
        with:
          node-version: 18.x
      - name: install dependencies
        run: yarn install
      - name: unit test
        run: yarn test
  build:
    needs: ['test']
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v5
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-
            ${{ runner.OS }}
      - name: Setup Node
        uses: actions/setup-node@v5
        with:
          node-version: 18.x
      - name: Install
        env:
          GATSBY_GITHUB_SHA: ${{ github.sha }}
          NETLIFY_ENV: production
        run: yarn install
      - name: Build
        env:
          GATSBY_GITHUB_SHA: ${{ github.sha }}
          NETLIFY_ENV: production
        run: yarn build
      - name: Deploy to netlify
        run: npx netlify-cli deploy --prod --dir=./public
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
  lighthouse:
    needs: ['build']
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v5

      - name: Install lighthouse
        run: sudo npm i -g lighthouse

      - name: Run lighthouse
        run: |
          lighthouse \
            --chrome-flags="--headless" \
            --output html --output-path /tmp/report.html \
            'https://portfolio.tubone-project24.xyz'
          mkdir ./public
          cp /tmp/report.html ./public/report.html
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
          keep_files: true
          destination_dir: lh
  chromatic-deployment:
    needs: ['test']
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-
            ${{ runner.OS }}
      - name: Setup Node
        uses: actions/setup-node@v5
        with:
          node-version: 18.x
      - name: Install
        run: yarn install
      - name: run Chromatic
        uses: chromaui/action@v13
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}